{"ast":null,"code":"import NavBar from \"../components/NavBar.vue\";\nimport Accordion from \"../components/AccordionElement.vue\";\nimport AccordionItem from \"../components/AccordionItem\";\nimport axios from 'axios';\nexport default {\n  name: \"ProductsView\",\n  data: () => ({\n    toggle_exclusive: 1,\n    dialog: false,\n    product: {\n      name: \"\",\n      price: 1,\n      material: \"\",\n      description: \"\",\n      size: \"\"\n    },\n    addedItem: {},\n    showDialog: false,\n    warningText: \"\",\n    editAmount: 1\n  }),\n  mounted() {\n    let productId = this.$route.params.id;\n    axios.get('http://localhost:8402/product/' + productId, {\n      headers: {\n        'Authorization': `Bearer ${this.$keycloak.token}`\n      }\n    }).then(response => {\n      this.product = response.data;\n      this.addedItem.productId = this.product.id;\n      this.addedItem.productname = this.product.name;\n      this.addedItem.productPrice = this.product.price;\n      this.addedItem.imageLink = this.product.imageLink;\n    });\n  },\n  methods: {\n    editCartItem: function () {\n      this.addedItem.amount = 1;\n      this.showDialog = true;\n    },\n    incrementAmount: function () {\n      if (this.editAmount === this.product.amount) {\n        this.warningText = \"Only \" + this.product.amount + \" items left.\";\n      } else {\n        this.editAmount++;\n        this.warningText = \"\";\n      }\n    },\n    decrementAmount: function () {\n      if (this.editAmount === 1) {\n        this.warningText = \"Amount cannot go under 1.\";\n      } else {\n        this.editAmount--;\n        this.warningText = \"\";\n      }\n    },\n    closeDialog: function () {\n      this.showDialog = false;\n    },\n    addToCart: function () {\n      this.addedItem.amount = this.editAmount;\n      console.log(this.addedItem);\n      axios.post('http://localhost:3333/cart?username=' + this.$username, this.addedItem, {\n        headers: {\n          'Authorization': `Bearer ${this.$keycloak.token}`\n        }\n      });\n      this.closeDialog();\n    }\n  },\n  components: {\n    NavBar,\n    Accordion,\n    AccordionItem\n  }\n};","map":{"version":3,"mappings":"AAgHA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;MAAAJ;MAAAK;MAAAC;MAAAC;MAAAC;IAAA;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;IACAC,MACAC;MACAC;QACA;MAEA;IAAA,GACAC;MACA;MACA;MACA;MACA;MACA;IAEA,EACA;EACA;EACAC;IACAC;MACA;MACA;IAGA;IACAC;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACAC;MACAV,MACAW;QACAT;UACA;QAEA;MAAA;MACA;IACA;EACA;EACAU;IACAC;IACAC;IACAC;EACA;AACA","names":["name","data","toggle_exclusive","dialog","product","price","material","description","size","addedItem","showDialog","warningText","editAmount","mounted","axios","get","headers","then","methods","editCartItem","incrementAmount","decrementAmount","closeDialog","addToCart","console","post","components","NavBar","Accordion","AccordionItem"],"sourceRoot":"src/views","sources":["ProductDescriptionView.vue"],"sourcesContent":["<template>\n    <v-app>\n      <NavBar />\n      <v-container fluid class=\"paddingTop100 alignleft marginx\">\n        <v-row >\n          <v-col cols=\"6\">\n          <div align=\"center\" justify=\"center\">\n            <v-img\n\n              contain\n              :src=product.imageLink\n            ></v-img>\n          </div>\n        </v-col>\n          <v-col cols=\"4\" class=\"\">\n            <h3>Hallo, ich bin</h3>\n            <h1 class=\"productTitle\">{{product.name}}</h1>\n            <h2>{{product.price}} EUR</h2>\n            <div align=\"center\" justify=\"center\">\n              <v-row>\n                <v-col cols=\"10\">\n                  \n                    <v-btn id=\"idCartButton\" rounded color=\"purple\" dark large class=\"my-5 bigButton\" @click=\"editCartItem()\"><h2>In den Warenkorb</h2></v-btn>\n                </v-col>\n              <v-col cols=\"2\">\n                <v-btn\n              icon\n              color=\"black\"\n              x-large\n              class=\"my-3\"\n            >\n              <v-icon>far fa-heart</v-icon>\n            </v-btn>\n              </v-col>\n              </v-row>\n              \n            </div>\n\n            <v-divider ></v-divider>\n            <Accordion>\n        <AccordionItem>\n          <!-- This slot will handle the title/header of the accordion and is the part you click on -->\n          <template slot=\"accordion-trigger\">\n            <p class=\"mt-2\" ><v-icon class=\"mr-2 opac\">fa-eye</v-icon>Beschreibung</p>\n          </template>\n          <!-- This slot will handle all the content that is passed to the accordion -->\n          <template slot=\"accordion-content\">\n            <span>{{product.description}}</span>\n          </template>\n          \n        </AccordionItem>\n        <AccordionItem>\n          <!-- This slot will handle the title/header of the accordion and is the part you click on -->\n          <template slot=\"accordion-trigger\">\n            <p class=\"mt-2\"><v-icon class=\"mr-2 opac\">fa-heart</v-icon>Material und Pflege</p>\n          </template>\n          <!-- This slot will handle all the content that is passed to the accordion -->\n          <template slot=\"accordion-content\">\n            <span>Material: {{product.material}}</span>\n          </template>\n          \n        </AccordionItem>\n        <AccordionItem>\n          <!-- This slot will handle the title/header of the accordion and is the part you click on -->\n          <template slot=\"accordion-trigger\">\n            <p class=\"mt-2\"><v-icon class=\"mr-2 opac\">fa-ruler</v-icon>Größenangaben</p>\n          </template>\n          <!-- This slot will handle all the content that is passed to the accordion -->\n          <template slot=\"accordion-content\">\n            <span>Größe: {{product.size}}</span>\n          </template>\n          \n        </AccordionItem>\n      </Accordion>\n            <v-divider></v-divider>\n          </v-col>\n        \n        </v-row>\n        <v-dialog id=\"itemAddedToCartDialog\" v-model=\"showDialog\" class=\"width50\">\n          <div class=\" my-10 flex spaceBetween px-10\">\n          <h2>Artikel bearbeiten</h2>\n          <v-btn icon @click=\"closeDialog()\"><v-icon>mdi-close</v-icon></v-btn>\n          </div>\n          <v-row class=\"px-10 pb-10\">\n            <v-col cols=\"4\">\n              <div><v-img  :src=product.imageLink class=\"roundedBorder\"></v-img></div>\n            </v-col>\n            <v-col cols=\"8\">\n              <h2>{{product.name}}</h2>\n              <h1>{{product.price}} EUR</h1>\n              <v-row class=\"my-5\">\n              \n                <v-col cols=\"6\">\n                  <v-row>\n                  <v-btn icon @click=\"decrementAmount()\"><v-icon>mdi-minus</v-icon></v-btn>\n                  <h3>{{editAmount}}</h3>\n                  <v-btn icon @click=\"incrementAmount()\" ><v-icon>mdi-plus</v-icon></v-btn>\n                  </v-row>\n                  <h4>{{warningText}}</h4>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-btn rounded large color=\"purple\" dark  elevation=\"5\" @click=\"addToCart()\"> Speichern </v-btn>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </v-dialog>\n\n      </v-container>\n    </v-app>\n  </template>\n  <script>\n  import NavBar from \"../components/NavBar.vue\";\n  import Accordion from \"../components/AccordionElement.vue\";\n  import AccordionItem from \"../components/AccordionItem\";\n  import axios from 'axios'\n\n  export default  {\n    name: \"ProductsView\",\n    data: () => ({\n      toggle_exclusive: 1,\n      dialog: false,\n      product: {name: \"\", price: 1, material: \"\", description: \"\", size:\"\"},\n      addedItem: {},\n      showDialog: false,\n      warningText: \"\",\n      editAmount: 1\n    }),\n    mounted () {\n      let productId =  this.$route.params.id\n      axios\n      .get('http://localhost:8402/product/'+productId,{\n      headers: {\n        'Authorization': `Bearer ${this.$keycloak.token}`\n\n      }})\n      .then(response => {\n        this.product = response.data;\n        this.addedItem.productId = this.product.id;\n        this.addedItem.productname = this.product.name;\n        this.addedItem.productPrice = this.product.price;\n        this.addedItem.imageLink = this.product.imageLink;\n\n      }\n        )\n         },\n    methods: {\n      editCartItem: function(){\n      this.addedItem.amount = 1;\n      this.showDialog = true;\n\n\n      },\n      incrementAmount: function(){\n      if(this.editAmount === this.product.amount){\n        this.warningText = \"Only \"+this.product.amount+\" items left.\";\n      }else{\n        this.editAmount++;\n        this.warningText = \"\";\n      }\n    },\n    decrementAmount: function(){\n      if(this.editAmount === 1){\n        this.warningText = \"Amount cannot go under 1.\"\n      }else{\n        this.editAmount--;\n        this.warningText = \"\";\n      }\n    },\n    closeDialog: function(){\n      this.showDialog = false;\n    },\n    addToCart: function(){\n      this.addedItem.amount = this.editAmount;\n      console.log(this.addedItem);\n      axios\n      .post('http://localhost:3333/cart?username='+this.$username, this.addedItem,{\n      headers: {\n        'Authorization': `Bearer ${this.$keycloak.token}`\n\n      }})\n      this.closeDialog();\n    }\n    },\n    components: {\n      NavBar,\n      Accordion,\n    AccordionItem\n  }\n  }\n  </script>\n  <style>\n  .paddingTop100{\n    padding-top: 100px !important;\n  }\n  .alignleft {\n    text-align: left !important;\n  }\n  .marginx{\n    margin-left: 10%;\n  }\n  .moreDetails{\n    color: black !important;\n\n  }\n  .borderTopBottom {\n    border-top: 1px solid grey;\n    border-bottom: 1px solid red‚;\n    padding-top: 5%;\n    padding-bottom:5%;\n  }\n  .opac{\n    opacity: 0.5;\n  }\n  .bigButton{\n    width: 100%;\n  }\n  #idCartButton:not(.on-hover) {\n    border: thin solid;\n    background-color: white;\n }\n   \n  \n  @media screen and (min-width: 375px){\n    .productTitle {\n    font-size: calc(32px + 24*(100vw - 375px)/ 1545);\n}\n  }\n  @media screen and (max-width: 47.9375em){\n    .productTitle {\n    font-size: 1.5rem;\n}\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}